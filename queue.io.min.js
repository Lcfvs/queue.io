/* Copyright 2014 Lcf.vs - Released under the MIT license - https://github.com/Lcfvs/queue.io */var queue;queue=function(e){var t,n=Object.defineProperty,r='EventEmitter';if(t=function(e,t){var i,s,o,u,a,f,l;return i=e('events')[r],s='object'==typeof t&&t.queue,o='function'==typeof setImmediate&&setImmediate||'object'==typeof process&&process.nextTick||function(e){setTimeout(e,0)},u=function c(e,t){var n,r,i,s,u,h;return n=Object.create(c.prototype),r=[],i=t||'value',s={done:!1},u=a.bind(r),h=f.bind(e,s,i,u),e.on(i,u),e.once('done',h),n.iterate=function(t){var u;return u=l(r,i,n,t),s.done?o(r.next):e.once('done',r.next),u},n},u.prototype=Object.create(i.prototype,{constructor:{value:u,writable:!0,enumerable:!1,configurable:!0}}),u.enqueue=function(e,t){var n,r,s,o,a;for(n=0,r=e.length,s=new i,o=u(s,t);r>n;n+=1)a=e[n],s.emit(t||'value',a);return s.emit('done'),o},a=function(e){this.push(e)},f=function(e,t,n){this.removeListener(t,n),e.done=!0},l=function(e,t,n,r){var s,a,f,l;return s=0,a=new i,f=function c(){l||(l=e.slice(0),r===u.PREV&&l.reverse()),o(function(){s>=l.length?a.emit('done',n):a.emit(t,l[s],c,n),s+=1})},e.next=f,a},n(u,'NEXT',{value:1,iterable:!0}),n(u,'PREV',{value:-1,iterable:!0}),u.noConflict=function(){return t.queue=s,u},u},'function'==typeof define&&'object'==typeof define.amd)define(t);else if('object'==typeof module&&'object'==typeof module.exports)return module.exports=t(require);return t(function(){var t;if(t=e.events?e.events[r]:e[r],!t)throw Error('Unable to find '+r);return{EventEmitter:t}})}(this);